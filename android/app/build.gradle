// plugins {
//     id "com.android.application"
//     id "kotlin-android"
//     // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
//     id "dev.flutter.flutter-gradle-plugin"
// }

// def localProperties = new Properties()
// def localPropertiesFile = rootProject.file("local.properties")
// if (localPropertiesFile.exists()) {
//     localPropertiesFile.withReader("UTF-8") { reader ->
//         localProperties.load(reader)
//     }
// }

// def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
// if (flutterVersionCode == null) {
//     flutterVersionCode = "1"
// }

// def flutterVersionName = localProperties.getProperty("flutter.versionName")
// if (flutterVersionName == null) {
//     flutterVersionName = "1.0"
// }

// android {
//     namespace = "com.example.prakash_helperhive"
//     compileSdk = flutter.compileSdkVersion
//     ndkVersion = flutter.ndkVersion

//     compileOptions {
//         sourceCompatibility = JavaVersion.VERSION_1_8
//         targetCompatibility = JavaVersion.VERSION_1_8
//     }

//     defaultConfig {
//         // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
//         applicationId = "com.example.prakash_helperhive"
//         // You can update the following values to match your application needs.
//         // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
//         minSdk = minSdkVersion 23
//         targetSdk = flutter.targetSdkVersion
//         versionCode = flutterVersionCode.toInteger()
//         versionName = flutterVersionName
//     }

//     buildTypes {
//         release {
//             // TODO: Add your own signing config for the release build.
//             // Signing with the debug keys for now, so `flutter run --release` works.
//             signingConfig = signingConfigs.debug
//         }
//     }
// }

// flutter {
//     source = "../.."
// }

// dependencies {
//     implementation 'androidx.multidex:multidex:2.0.1'
// }

// File: android/app/build.gradle

plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode", "1")
def flutterVersionName = localProperties.getProperty("flutter.versionName", "1.0")
def compileSdkVersion = localProperties.getProperty("flutter.compileSdkVersion", "34").toInteger()
def targetSdkVersion = localProperties.getProperty("flutter.targetSdkVersion", "34").toInteger()
def ndkVersion = localProperties.getProperty("flutter.ndkVersion", "21.3.6528147")

android {
    namespace = "com.example.prakash_helperhive"
    compileSdk = compileSdkVersion
    ndkVersion = ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId = "com.example.prakash_helperhive"
        minSdk = 23
        targetSdk = targetSdkVersion
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
    }

    buildTypes {
        release {
            signingConfig = signingConfigs.debug
        }
    }
}

flutter {
    source = "../.."
}

dependencies {
    implementation 'androidx.multidex:multidex:2.0.1'
}
